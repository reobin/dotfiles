#!/bin/bash

#
#     ███████╗██╗   ██╗███╗   ███╗██╗     ██╗███╗   ██╗██╗  ██╗███████╗
#     ██╔════╝╚██╗ ██╔╝████╗ ████║██║     ██║████╗  ██║██║ ██╔╝██╔════╝
#     ███████╗ ╚████╔╝ ██╔████╔██║██║     ██║██╔██╗ ██║█████╔╝ ███████╗
#     ╚════██║  ╚██╔╝  ██║╚██╔╝██║██║     ██║██║╚██╗██║██╔═██╗ ╚════██║
#     ███████║   ██║   ██║ ╚═╝ ██║███████╗██║██║ ╚████║██║  ██╗███████║
#     ╚══════╝   ╚═╝   ╚═╝     ╚═╝╚══════╝╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝╚══════╝
#
#     Creates symlinks enabling centralized dotfile management
#


dotconfig_directories=(nvim yabai karabiner pgcli alacritty)
root_directories=(.tmux)
root_files=(.zshrc .skhdrc .gitconfig .tmux.conf .gitignore_global)

RED="\033[0;31m"
GREEN="\033[0;32m"
YELLOW="\033[0;33m"

BREAK_LINE="
"

create_symlinks() {
  local label=$1
  local items=$2[@]
  local path_prefix=$3
  local is_directory=$4

  printf "${YELLOW}create symlinks for $label...  $BREAK_LINE$BREAK_LINE"

  for item in ${!items}; do
    local path=$item
    if [[ ! -z $path_prefix ]]; then
      path=$path_prefix$path
    fi;

    local target_path="$HOME/$path"

    if test -e $target_path; then
      printf "${RED}remove $target_path$BREAK_LINE"
      rm -rf $target_path
    fi;

    local source_path="$(pwd)/$item"

    printf "${GREEN}create symlink from $source_path to $target_path"

    ln -s $source_path $target_path

    printf "$BREAK_LINE$BREAK_LINE"
  done
}

create_symlinks ".config directories" dotconfig_directories ".config/" true

create_symlinks "root directories" root_directories "" true

create_symlinks "root files" root_files

printf "$BREAK_LINE${YELLOW}done"
